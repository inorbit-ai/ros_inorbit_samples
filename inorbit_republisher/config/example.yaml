republishers:
- topic: "/rosout"
  msg_type: "rcl_interfaces/msg/Log"
  mappings:
  - field: "msg"
    mapping_type: "single_field"
    mapping_options:
      filter: 'lambda x: x != "Go"'
    out:
      topic: "/inorbit/custom_data"
      key: "rosout_msg"

- topic: "/diagnostics"
  qos: 10
  msg_type: "diagnostic_msgs/msg/DiagnosticArray"
  mappings:
  - field: "status"
    mapping_type: "array_of_fields"
    mapping_options:
      fields: ["level", "hardware_id"]
      filter: 'lambda x: (x.level == bytes(1) or x.level == bytes(0))'
    out:
      topic: "/inorbit/diagnostics_test"
      key: "diagnostics_status"

- topic: "/cmd_vel"
  qos: 10
  msg_type: "geometry_msgs/msg/Twist"
  mappings:
  - field: "linear"
    mapping_type: "json_of_fields"
    mapping_options:
      fields: ["x", "y", "z"]
      filter: 'lambda vel: (vel["x"] > 0)'
    out:
      topic: "/inorbit/linear_vel_test"
      key: "linear_vel"

- topic: "/map_metadata"
  latched: true
  msg_type: "nav_msgs/msg/MapMetaData"
  mappings:
  - field: "resolution"
    mapping_type: "single_field"
    out:
      topic: "/inorbit/map_res_test"
      key: "map_resolution"

- topic: "/navsat"
  msg_type: "sensor_msgs/NavSatFix"
  mappings:
  - mapping_type: "serialize"
    mapping_options:
      fields: ["status", "latitude", "longitude", "position_covariance_type"]
    out:
      topic: "/inorbit/custom_data"
      key: "navsat"

static_publishers:
# - value_from:
#     package_version: "rospy"
#   out:
#     topic: "/inorbit/custom_data/0"
#     key: "rospy_version"
# - value_from:
#     package_version: "inorbit_republisher"
#   out:
#     topic: "/inorbit/custom_data/0"
#     key: "inorbit_republisher_version"
- value_from:
    environment_variable: "PYTHONPATH"
  out:
    topic: "/inorbit/custom_data/static"
    key: "python_path"
- value: "let's republish in orbit"
  out:
    topic: "/inorbit/custom_data/static"
    key: "greeting"